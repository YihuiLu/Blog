{"posts": [{"title": "\u89e3\u51b3 M1 Mac 'has no attribute 'enable_load_extension'", "date": "2021-08-09T19:46:00-00.00", "path": "/Blog/archives/M1%20Mac%20%27has%20no%20attribute%20%27enable_load_extension%27/", "text": "\u6700\u8fd1\u7531\u4e8e\u9879\u76ee\u9700\u8981\uff0c\u4f7f\u7528spatialite\u63d2\u4ef6\uff0c\u4f46\u662f\u5b9e\u9645\u4f7f\u7528\u65f6\u9047\u5230\u4ee5\u4e0b\u9519\u8befAttributeError: &#39;sqlite3.Connection&#39; object has no attribute &#39;enable_load_extension&#39;\n\n\u5e9f\u4e86\u70b9\u5fc3\u601d\uff0c\u6700\u7ec8\u5728Python3.9\u6587\u6863\u4e2d\u627e\u5230\u5982\u4e0b\u63cf\u8ff0\uff1a\nsqlite3 \u6a21\u5757\u7684\u6784\u5efa\u9ed8\u8ba4\u6ca1\u6709\u9644\u5e26\u53ef\u52a0\u8f7d\u6269\u5c55\u652f\u6301\uff0c\u56e0\u4e3a\u67d0\u4e9b\u5e73\u53f0\uff08\u7279\u522b\u662f Mac OS X\uff09\u4e0a\u7684 SQLite \u5e93\u5728\u7f16\u8bd1\u65f6\u672a\u4f7f\u7528\u6b64\u7279\u6027\u3002 \u8981\u83b7\u5f97\u53ef\u52a0\u8f7d\u6269\u5c55\u652f\u6301\uff0c\u4f60\u5fc5\u987b\u4f20\u5165 --enable-loadable-sqlite-extensions \u6765\u8fdb\u884c\u914d\u7f6e\u3002\n\u63cf\u8ff0\u6bd4\u8f83\u6e05\u6670\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u7cfb\u7edf\u73af\u5883\uff0c\u5bfc\u81f4\u7f16\u8bd1\u65f6\u672a\u6253\u5f00enable-loadable-sqlite-extensions\u4e8e\u662f\u5c1d\u8bd5\u4e86\u51e0\u4e2a\u7248\u672c\u7684python\u4ee5\u540e\uff0c\u6700\u7ec8\u6210\u529f\u7f16\u8bd1 python3.8.10\u7f16\u8bd1\u6d41\u7a0b\uff1a\n\u4e0b\u8f7d python3.8.10 \u5230\u672c\u5730\n\u89e3\u538b\u5230\u4efb\u610f\u76ee\u5f55\n\ncd /\u89e3\u538b\u76ee\u5f55\n\n./configure --enable-loadable-sqlite-extensions  \n# --enable-loadable-sqlite-extensions\u662f\u5173\u952e\n\nmake\n\nmake install \n\n# \u53ef\u80fd\u4f1a\u51fa\u73b0\u7f3a\u5c11\u4f9d\u8d56\u65e0\u6cd5\u7f16\u8bd1\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u62a5\u9519\u5904\u7406\n\n\n\n\u6700\u540e\u7ecf\u8fc7\u6d4b\u8bd5\u53ef\u4ee5\u5b8c\u7f8e\u8c03\u7528 enable_load_extension \u51fd\u6570", "categories": [{"name": "Sqlite", "slug": "Sqlite", "permalink": "/Blog/category/Sqlite/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "Sqlite", "slug": "Sqlite", "permalink": "/Blog/tag/Sqlite/"}, {"name": "Python", "slug": "Python", "permalink": "/Blog/tag/Python/"}, {"name": "M1", "slug": "M1", "permalink": "/Blog/tag/M1/"}]}, {"title": "\u5c0f\u8bb0\u4e00\u6b21FastAPI\u4f7f\u7528\u8fde\u63a5\u6c60\u8c03\u7528Redis\u65f6\uff0c\u5207\u6362\u6570\u636e\u5e93\u7684\u95ee\u9898", "date": "2021-03-11T17:38:00-00.00", "path": "/Blog/archives/FastAPI%20Redis%20aioredis/", "text": "\u4e4b\u524d\u56e0\u4e3a\u9879\u76ee\u9700\u8981\uff0c\u5c1d\u8bd5\u4e86\u65b0\u5174\u6846\u67b6 FastAPI\uff0c\u4ed6\u7684\u5f88\u591a\u7279\u6027\u5341\u5206\u503c\u5f97\u79f0\u8d5e\uff0c\u6bd4\u5982\u81ea\u52a8\u6587\u6863\u3001\u7c7b\u578b\u6821\u9a8c\u3001\u901f\u5ea6\u3001\u5f02\u6b65\u7b49\u7b49\u4f46\u662f\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5207\u6362Redis db\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u9a8c\u8bc1\u7801\u3001\u7528\u6237\u767b\u5f55\u4fe1\u606f\u7b49\u7b49\u7684\u7f13\u5b58\u9700\u8981\u901a\u8fc7db\u9694\u79bb\uff0c\u56e0\u4e3aFastApi\u7684\u5f02\u6b65\u7279\u6027\uff0c\u5f53\u65f6\u9009\u7528\u4e86aioredis\n\u4f5c\u4e3a\u9a71\u52a8\uff0c\u4f46\u662f\u7ffb\u4e86\u7ffb\u6587\u6863\u5e76\u6ca1\u6709\u627e\u5230\u5728\u521b\u5efa\u8fde\u63a5\u6c60\u540e\u5207\u6362\u6570\u636e\u5e93\u7684\u65b9\u6cd5\uff0c\u4e8e\u662f\u53c2\u8003\u4e86Django\u6846\u67b6\u7684\u5b9e\u73b0\u539f\u7406\uff1a\u7ed9\u6bcf\u4e00\u4e2adb\u5355\u72ec\u521b\u5efa\u8fde\u63a5\u6c60\uff0c\u5728\u4f7f\u7528\u65f6\u6839\u636e\u9700\u6c42\u8c03\u7528\u5373\u53ef\u4e8e\u662f\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1aclass RedisPool:\n    redis_pool_dict = {}\n\n    def __await__(self):\n        self._create_pool()\n        return self._create_pool().__await__()\n\n    async def _create_pool(self):\n        for i in settings.REDIS_DB_LIST:\n            redis = await aioredis.create_redis_pool(\n                settings.REDIS_URL + &quot;{db}?encoding=utf-8&quot;.format(db=i)\n            )\n            self.redis_pool_dict.update({i: redis})\n        return self\n\n    def select_db(self, db=52):\n        c = self.redis_pool_dict[db]\n        if not c:\n            raise ValueError(&#39;\u8c03\u7528\u7684Redis\u6570\u636e\u5e93\u672a\u521b\u5efa\u8fde\u63a5\u6c60&#39;)\n        return c\n\n    def close_pool(self):\n        for i in self.redis_pool_dict.values():\n            i.close()\n\n\u7ed3\u5408\u6846\u67b6\u5982\u4e0b\uff1adef register_redis(app: FastAPI) -&gt; None:\n    @app.on_event(&quot;startup&quot;)\n    async def create_redis():\n        app.state.redis = await RedisPool()\n\n    @app.on_event(&quot;shutdown&quot;)\n    async def close_redis():\n        app.state.redis.close_pool()\n\n\u8c03\u7528\u65b9\u6cd5\u5982\u4e0b\uff1aredis_client = request.app.state.redis.select_db(db=53)\nrs = await redis_client.set(\n        key=&quot;test_key-&quot;,\n        value=&quot;12&quot;,\n        expire=60 * 60 * 4  # token\u8fc7\u671f\u65f6\u95f4\u4e3a4\u5c0f\u65f6\n    )\n\n\u5927\u6982\u903b\u8f91\u5982\u4e0b\uff1a\n\u8fed\u4ee3\u914d\u7f6e\u6587\u4ef6\u58f0\u660e\u7684\uff0c\u9700\u8981\u4f7f\u7528\u7684db\u5217\u8868\n\u521b\u5efa\u6bcf\u4e2adb\u7684pool\n\u4f7f\u7528\u65f6\u627e\u5230\u9700\u8981\u7684\u62ff\u53bb\u7528\u5373\u53ef\n\n\u5176\u4ed6\uff1a\n\u5728\u6846\u67b6\u542f\u52a8\u65f6\u5229\u7528FastAPI\u7684@app.on_event(&quot;startup&quot;)\u521d\u59cb\u5316\u8fde\u63a5\u6c60\n\u5728\u6846\u67b6\u5173\u95ed\u65f6close_pool()\n\n\u4e0a\u9762\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u56e0\u4e3aaioredis\u662f\u5f02\u6b65\u7684\uff0c\u6240\u4ee5\u4e00\u5904\u5f02\u6b65\u5904\u5904\u5f02\u6b65\n\u5f02\u6b65\u7c7b\u4e0d\u5e38\u5199\uff0c\u6240\u4ee5\u8bb0\u5f55\u4e00\u4e0b", "categories": [{"name": "FastAPI", "slug": "FastAPI", "permalink": "/Blog/category/FastAPI/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "FastAPI", "slug": "FastAPI", "permalink": "/Blog/tag/FastAPI/"}, {"name": "Redis", "slug": "Redis", "permalink": "/Blog/tag/Redis/"}]}, {"title": "Go\u8bed\u8a00\u5165\u95e8\u5fc3\u5f97", "date": "2020-09-28T16:58:00-00.00", "path": "/Blog/archives/Go_1/", "text": "", "categories": [{"name": "Go", "slug": "Go", "permalink": "/Blog/category/Go/"}], "tags": [{"name": "\u6559\u7a0b", "slug": "\u6559\u7a0b", "permalink": "/Blog/tag/%E6%95%99%E7%A8%8B/"}]}, {"title": "Celery+jpype \u5361\u6b7b\uff0cCelery+Java \u5361\u6b7b\uff0cCelery Task \u5361\u6b7b", "date": "2020-09-08T16:58:00-00.00", "path": "/Blog/archives/Celery_jpype/", "text": "\u6700\u8fd1\u5728\u5199\u4e00\u4e2a\u9879\u76ee\u7684\u65f6\u5019\u540c\u65f6\u4f7f\u7528\u5230\u4e86Celery\u548cjpype\u4f46\u662f\u5728\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86Celery Task\u8fdb\u7a0b\u5361\u6b7b\u7684\u60c5\u51b5\u89e3\u51b3\u601d\u8def\u5982\u4e0b\uff1a\u9996\u5148\u662f\u89c2\u5bdf\u5230\u6d89\u53ca\u5230\u4f7f\u7528jpype\u7684\u4ee3\u7801\u5728\u672c\u5730\u8fd0\u884c\u6ca1\u6709\u95ee\u9898\uff0c\u4ee3\u7801\u7247\u6bb5\u5982\u4e0b\uff1afrom jpype import *\n\n...\n\ndef load_trie(src):\n    maps = JClass(&#39;java.util.TreeMap&#39;)()  # \u521b\u5efa TreeMap \u7a7a\u95f4\n\n    for word in src:\n        word = word.strip()\n        maps[word] = word\n    rs = JClass(&#39;com.hankcs.hanlp.collection.trie.DoubleArrayTrie&#39;)(maps)\n    return rs\n\n...\n\n\u7ecf\u8fc7\u6392\u9519\u540e\u53d1\u73b0\u4ee3\u7801\u505c\u6b62\u5728\u4ee5\u4e0b\u4f4d\u7f6e\uff1ars = JClass(&#39;com.hankcs.hanlp.collection.trie.DoubleArrayTrie&#39;)(maps)\n\n\u8fd9\u6bb5\u4ee3\u7801\u8c03\u7528\u4e86Java\u76f8\u5173\u7684\u5305\uff0c\u4e8e\u662fGoogle\u5230\u4e86\u4ee5\u4e0b\u5185\u5bb9\nhttps://github.com/jpype-project/jpype/issues/358\u5728\u8fd9\u4e2aissues\u4e2d\u63d0\u5230\u4e86\uff1a\nWow that is failing in a very strange spot. When you said failed in a thread I figured it would be in the proxy code, but this is a fail on getting environment variables on startup. Are you sure that you don't have more than one JVM started? Your module doesn't do a check for isJVMStarted, but I thought that we have explicit checks to prevent a fail there so that seems unlikely. The trace also does not show a second call.\nMy next best guess is this is a security violation. I don't know much about celery, but it may be possible that it is trying to start the JVM from within some type of sand box. My approach would be to instrument the call to JPEnv::CreateJavaVM to record all the inputs that are being passed to JVM and see if I was sure that nothing bad got sent to the JVM call. As you can see in the trace, we haven't even made contact with the JVM, so assuming we are providing it with valid inputs the bug is likely in the JVM and not within JPype.\nThe last option here though it seems unlikely is the shared memory loader for the jvm has somehow failed. The only thing that we do with the JVM before this point is loading the shared library into memory. On architectures with mixed executable files (32/64) this can often go wrong leading to a bad entry point. But as you ran to the Parse locale it seems unlikely.\n\n\nC  [libjava.dylib+0xd2a7]  getMacOSXLocale+0x123\nC  [libjava.dylib+0xd353]  setupMacOSXLocale+0x12\nC  [libjava.dylib+0xd765]  ParseLocale+0x2e\nC  [libjava.dylib+0xd4ef]  GetJavaProperties+0x183\nC  [libjava.dylib+0x5cbb]  Java_java_lang_System_initProperties+0x30\nj  java.lang.System.initProperties(Ljava/util/Properties;)Ljava/util/Properties;+0\nj  java.lang.System.initializeSystemClass()V+13\nv  ~StubRoutines::call_stub\nV  [libjvm.dylib+0x2f0b3a]\nV  [libjvm.dylib+0x2f0d35]\nV  [libjvm.dylib+0x2f0ead]\nV  [libjvm.dylib+0x57313b]\nV  [libjvm.dylib+0x3271b2]\nC  [_jpype.cpython-36m-darwin.so+0x242cb]  _ZN5JPEnv12CreateJavaVMEPv+0x3b\nThe specific failure point is\n\n // Get the entry points in the shared library\n loadEntryPoints(vmPath);  &lt;== Could load invalid pointers\n\n JavaVMInitArgs jniArgs;\n jniArgs.options = NULL;\n\n // prepare this ...\n jniArgs.version = USE_JNI_VERSION;\n jniArgs.ignoreUnrecognized = ignoreUnrecognized;\n\n jniArgs.nOptions = (jint)args.size();\n jniArgs.options = (JavaVMOption*)malloc(sizeof(JavaVMOption)*jniArgs.nOptions);\n memset(jniArgs.options, 0, sizeof(JavaVMOption)*jniArgs.nOptions);\n for (int i = 0; i &lt; jniArgs.nOptions; i++)\n {\n   jniArgs.options[i].optionString = (char*)args[i].c_str();  &lt;== All options should be valid\n }\n JPEnv::CreateJavaVM((void*)&amp;jniArgs);  &lt;== Everything in the structure should be valid at this point\n free(jniArgs.options);\nThe only trace I could find that was similar is\n\nhttps://bugs.openjdk.java.net/secure/attachment/72587/hs_err_pid55488.log\n\n\n\u518d\u52a0\u4e0a\u8fd9\u4e2aissues\u4e2d\u7684\u5176\u4ed6\u4fe1\u606f\uff0c\u731c\u6d4b\u662f\u5728celery\u7684worker\u4e2d\u56e0\u4e3a\u67d0\u79cd\u73af\u5883\u7684\u5f71\u54cd\u5bfc\u81f4Java\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\uff0c\u5e76\u4e0eJVM\u6709\u5173\u5e76\u4e14\u6700\u540e\u4ed6\u4eec\u63d0\u5230\nStarting after the fork is by far the safest approach.\n\u7136\u540e\u8fd9\u4e2a\u95ee\u9898\u8fd8\u5173\u95ed\u4e86\uff0c\u8fd9\u5c31\u90c1\u95f7\u4e86\uff0c\u4f46\u8bf7\u6559\u540c\u4e8b\u5efa\u8bae\u6211\u770b\u4e86\u8fd9\u4e2a\uff1a\nhttps://stackoverflow.com/questions/12003221/celery-task-schedule-ensuring-a-task-is-only-executed-one-at-a-time\u6700\u540e\u627e\u5230\u4e86\uff1ahttps://docs.celeryproject.org/en/stable/reference/celery.bin.worker.html#cmdoption-celery-worker-p\u731c\u6d4b\u8ddfworker\u8fd0\u884c\u65f6\u7684\u7ebf\u7a0b\u7ea6\u675f\u6709\u5173\uff0c\u4e8e\u662f\u4e4e\u6d4b\u8bd5\uff1a\n-P, --pool\nPool implementation:\n\nprefork (default), eventlet, gevent, threads or solo.\n\n##\u7136\u540e\u5c31\u987a\u5229\u7684\u6210\u529f\u4e86\u6700\u540e\u7684worker\u542f\u52a8\u547d\u4ee4\u5982\u4e0b\uff1a\ncelery -A celery_app.worker:celery worker -c 4 -l info -P solo\n\n\u91cd\u70b9\u5728\u4e8e\n-P solo\n\n\u8fd9\u4e2a\u547d\u4ee4\u6307\u5b9a\u4e86\u6bcf\u4e2aworker\u53ea\u80fd\u7528\u5355\u7ebf\u7a0b\u6a21\u5f0f\u6267\u884c\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u5bfc\u81f4JVM\u51fa\u73b0\u4e0d\u53ef\u9884\u77e5\u7684\u95ee\u9898\u7ecf\u8fc7\u6d4b\u8bd5\u5728\u6307\u5b9a -P solo \u7684\u540c\u65f6\u53ef\u4ee5\u6307\u5b9a -c\u4ed3\u4fc3\u8bb0\u5f55\uff0c\u65e5\u540e\u4fee\u6539", "categories": [{"name": "Python", "slug": "Python", "permalink": "/Blog/category/Python/"}], "tags": [{"name": "Celery", "slug": "Celery", "permalink": "/Blog/tag/Celery/"}, {"name": "jpype", "slug": "jpype", "permalink": "/Blog/tag/jpype/"}]}, {"title": "sqlalchemy \u7ed1\u5b9a\u591a\u4e2a\u6570\u636e\u5e93", "date": "2020-09-07T10:18:00-00.00", "path": "/Blog/archives/sqlalchemy_db/", "text": "#\u7ed1\u5b9a\u591a\u4e2a\u6570\u636e\u5e93\n\u4ece 0.12 \u5f00\u59cb\uff0cFlask-SQLAlchemy \u53ef\u4ee5\u5bb9\u6613\u5730\u8fde\u63a5\u5230\u591a\u4e2a\u6570\u636e\u5e93\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u9884\u914d\u7f6e\u4e86 SQLAlchemy \u6765\u652f\u6301\u591a\u4e2a \u201cbinds\u201d\u3002\u4ec0\u4e48\u662f\u7ed1\u5b9a(binds)? \u5728 SQLAlchemy \u4e2d\u4e00\u4e2a\u7ed1\u5b9a(bind)\u662f\u80fd\u6267\u884c SQL \u8bed\u53e5\u5e76\u4e14\u901a\u5e38\u662f\u4e00\u4e2a\u8fde\u63a5\u6216\u8005\u5f15\u64ce\u7c7b\u7684\u4e1c\u4e1c\u3002\u5728 Flask-SQLAlchemy \u4e2d\uff0c\u7ed1\u5b9a(bind)\u603b\u662f\u80cc\u540e\u81ea\u52a8\u4e3a\u60a8\u521b\u5efa\u597d\u7684\u5f15\u64ce\u3002\u8fd9\u4e9b\u5f15\u64ce\u4e2d\u7684\u6bcf\u4e2a\u4e4b\u540e\u90fd\u4f1a\u5173\u8054\u4e00\u4e2a\u77ed\u952e\uff08bind key\uff09\u3002\u8fd9\u4e2a\u952e\u4f1a\u5728\u6a21\u578b\u58f0\u660e\u65f6\u4f7f\u7528\u6765\u628a\u4e00\u4e2a\u6a21\u578b\u5173\u8054\u5230\u4e00\u4e2a\u7279\u5b9a\u5f15\u64ce\u3002\u5982\u679c\u6a21\u578b\u6ca1\u6709\u5173\u8054\u4e00\u4e2a\u7279\u5b9a\u7684\u5f15\u64ce\u7684\u8bdd\uff0c\u5c31\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u8fde\u63a5(SQLALCHEMY_DATABASE_URI \u914d\u7f6e\u503c)\u3002##\u793a\u4f8b\u914d\u7f6e\n\u4e0b\u9762\u7684\u914d\u7f6e\u58f0\u660e\u4e86\u4e09\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u3002\u7279\u6b8a\u7684\u9ed8\u8ba4\u503c\u548c\u53e6\u5916\u4e24\u4e2a\u5206\u522b\u540d\u4e3a users\uff08\u7528\u4e8e\u7528\u6237\uff09\u548cappmeta \u8fde\u63a5\u5230\u4e00\u4e2a\u63d0\u4f9b\u53ea\u8bfb\u8bbf\u95ee\u5e94\u7528\u5185\u90e8\u6570\u636e\u7684 sqlite \u6570\u636e\u5e93\uff09:SQLALCHEMY_DATABASE_URI = &#39;postgres://localhost/main&#39;\nSQLALCHEMY_BINDS = {\n    &#39;users&#39;:        &#39;mysqldb://localhost/users&#39;,\n    &#39;appmeta&#39;:      &#39;sqlite:////path/to/appmeta.db&#39;\n}\n\n##\u521b\u5efa\u548c\u5220\u9664\u8868\ncreate_all() \u548c drop_all() \u65b9\u6cd5\u9ed8\u8ba4\u4f5c\u7528\u4e8e\u6240\u6709\u58f0\u660e\u7684\u7ed1\u5b9a(bind)\uff0c\u5305\u62ec\u9ed8\u8ba4\u7684\u3002\u8fd9\u4e2a\u884c\u4e3a\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b bind \u53c2\u6570\u6765\u5b9a\u5236\u3002\u5b83\u53ef\u4ee5\u662f\u5355\u4e2a\u7ed1\u5b9a(bind)\u540d, 'all' \u6307\u5411\u6240\u6709\u7ed1\u5b9a(binds)\u6216\u4e00\u4e2a\u7ed1\u5b9a(bind)\u540d\u7684\u5217\u8868\u3002\u9ed8\u8ba4\u7684\u7ed1\u5b9a(bind)(SQLALCHEMY_DATABASE_URI) \u540d\u4e3a None:\n&gt;&gt;&gt; db.create_all()\n&gt;&gt;&gt; db.create_all(bind=['users'])\n&gt;&gt;&gt; db.create_all(bind='appmeta')\n&gt;&gt;&gt; db.drop_all(bind=None)\n\n##\u5f15\u7528\u7ed1\u5b9a(Binds)\n\u5f53\u60a8\u58f0\u660e\u6a21\u578b\u65f6\uff0c\u60a8\u53ef\u4ee5\u7528 bind_key \u5c5e\u6027\u6307\u5b9a\u7ed1\u5b9a(bind):class User(db.Model):\n    __bind_key__ = &#39;users&#39;\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(80), unique=True)\n\nbind key \u5b58\u50a8\u5728\u8868\u4e2d\u7684 info \u5b57\u5178\u4e2d\u4f5c\u4e3a 'bind_key' \u952e\u503c\u3002\u4e86\u89e3\u8fd9\u4e2a\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5f53\u60a8\u60f3\u8981\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u8868\u5bf9\u8c61\u65f6\uff0c\u60a8\u4f1a\u9700\u8981\u628a\u5b83\u653e\u5728\u90a3:user_favorites = db.Table(&#39;user_favorites&#39;,\n    db.Column(&#39;user_id&#39;, db.Integer, db.ForeignKey(&#39;user.id&#39;)),\n    db.Column(&#39;message_id&#39;, db.Integer, db.ForeignKey(&#39;message.id&#39;)),\n    info={&#39;bind_key&#39;: &#39;users&#39;}\n)\n\n\u5982\u679c\u60a8\u5728\u6a21\u578b\u4e0a\u6307\u5b9a\u4e86 bind_key \uff0c\u60a8\u53ef\u4ee5\u7528\u5b83\u4eec\u51c6\u786e\u5730\u505a\u60a8\u60f3\u8981\u7684\u3002\u6a21\u578b\u4f1a\u81ea\u884c\u8fde \u63a5\u5230\u6307\u5b9a\u7684\u6570\u636e\u5e93\u8fde\u63a5\u3002", "categories": [{"name": "Python", "slug": "Python", "permalink": "/Blog/category/Python/"}], "tags": [{"name": "Flask", "slug": "Flask", "permalink": "/Blog/tag/Flask/"}, {"name": "Sqlalchemy", "slug": "Sqlalchemy", "permalink": "/Blog/tag/Sqlalchemy/"}]}, {"title": "Python \u5305\u7ba1\u7406\u5de5\u5177\u5408\u96c6", "date": "2020-09-04T11:14:00-00.00", "path": "/Blog/archives/Python/", "text": "", "categories": [{"name": "Python", "slug": "Python", "permalink": "/Blog/category/Python/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "Pipenv", "slug": "Pipenv", "permalink": "/Blog/tag/Pipenv/"}, {"name": "Poetry", "slug": "Poetry", "permalink": "/Blog/tag/Poetry/"}]}, {"title": "Linux \u4e0b\u5b89\u88c5Java 14\uff08\u9002\u7528\u5927\u591a\u6570Linux\u53d1\u884c\u7248\uff09", "date": "2020-09-03T13:34:00-00.00", "path": "/Blog/archives/java/", "text": "1. \u5728/usr/\u4e0b\u521b\u5efajava\u76ee\u5f55\n\nroot@9314e39c1d8c: mkdir/usr/java\nroot@9314e39c1d8c: cd /usr/java\n\n2. \u4e0b\u8f7dJava\u538b\u7f29\u6587\u4ef6\u5e76\u89e3\u538b\n\nroot@9314e39c1d8c: curl -O curl -O https://download.oracle.com/otn-pub/java/jdk/14.0.2+12/205943a0976c4ed48cb16f1043c5c647/jdk-14.0.2_linux-x64_bin.tar.gz?AuthParam=1599111678_3050bd9ff5d540cc544a0567b2d3e31f\nroot@9314e39c1d8c: tar -zxvf jdk-14.0.2_linux-x64_bin.tar.gz\\?AuthParam\\=1599111678_3050bd9ff5d540cc544a0567b2d3e31f\n\n\u4e5f\u53ef\u4ee5\u6765\u8fd9\u91cc\u4e0b\u8f7d\u81ea\u5df1\u9700\u8981\u7684\u7248\u672c\uff1a\nhttps://www.oracle.com/cn/java/technologies/javase-downloads.html\n\u4e0b\u8f7d\u5b8c\u4ee5\u540e\u81ea\u884c\u8c03\u6574\u5b89\u88c5\u6307\u4ee43. \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\n\nroot@9314e39c1d8c: vi /etc/profile\n\n\u5728\u6587\u4ef6\u6700\u540e\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\nJAVA_HOME=/usr/java/jdk-14.0.2\nJRE_HOME=/usr/java/jdk-14.0.2/jre\nCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nexport JAVA_HOME JRE_HOME CLASS_PATH PATH\n\n4. \u66f4\u65b0\u914d\u7f6e\nroot@9314e39c1d8c: source /etc/profile5. \u9a8c\u8bc1\n\nroot@9314e39c1d8c:/usr/java# java --version\njava 14.0.2 2020-07-14\nJava(TM) SE Runtime Environment (build 14.0.2+12-46)\nJava HotSpot(TM) 64-Bit Server VM (build 14.0.2+12-46, mixed mode, sharing)\n\n\u5927\u529f\u544a\u6210\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/Blog/category/Java/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "Java", "slug": "Java", "permalink": "/Blog/tag/Java/"}, {"name": "Docker", "slug": "Docker", "permalink": "/Blog/tag/Docker/"}]}, {"title": "Flask + Celery \u5b9e\u73b0\u5206\u5e03\u5f0f\u5f02\u6b65\u5904\u7406", "date": "2020-09-01T13:34:00-00.00", "path": "/Blog/archives/Celery/", "text": "\u4fee\u6539\u4e00\u4e0b\u8bd5\u8bd5\u4fee\u6539\u90ae\u7bb1\u6548\u679c", "categories": [{"name": "Python", "slug": "Python", "permalink": "/Blog/category/Python/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "Celery", "slug": "Celery", "permalink": "/Blog/tag/Celery/"}, {"name": "Flask", "slug": "Flask", "permalink": "/Blog/tag/Flask/"}]}, {"title": "\u5982\u4f55\u5feb\u901f\u4f7f\u7528Flask\u6846\u67b6\u5f00\u53d1\u4e00\u4e2a\u4f01\u4e1a\u7ea7Restful API\u670d\u52a1\uff1f", "date": "2020-08-17T13:34:00-00.00", "path": "/Blog/archives/Flask/", "text": "", "categories": [{"name": "Python", "slug": "Python", "permalink": "/Blog/category/Python/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "Redis", "slug": "Redis", "permalink": "/Blog/tag/Redis/"}]}, {"title": "MacOS \u4e0b Pycharm\u8fd0\u884cSpeechRecognition\u65e0\u6cd5\u5f55\u97f3", "date": "2020-07-17T11:05:00-00.00", "path": "/Blog/archives/SpeechRecognition/", "text": "\u5173\u8054\u540c\u6837\u73af\u5883\u4e0b\u7684\u5176\u4ed6\u5e93\u548c\u670d\u52a1\u6bd4\u5982\uff1a\u6444\u50cf\u5934\u56e0\u4e3a\u6d89\u53ca\u5230\u8c03\u7528\u786c\u4ef6\uff0cMacOS\u4f1a\u8bf7\u6c42\u7528\u6237\u6388\u6743\uff0c\u7531\u4e8e2020.3\u4ee5\u524d\u7684Pycharm\u5e76\u4e0d\u517c\u5bb9\u6388\u6743\u529f\u80fd\uff0c\u5bfc\u81f4\u4ee3\u7801\u8fd0\u884c\u4e0d\u6b63\u5e38\u89e3\u51b3\u65b9\u5f0f\uff1a\u5efa\u8bae\u76f4\u63a5\u5728\u7ec8\u7aef\u8fd0\u884c\u4ee3\u7801\u5427\uff0c\u6216\u8005\u5347\u7ea7Pycharm\u5230\u6700\u65b0\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u65b9\u6cd5\u8ba9Pycharm\u5f97\u5230\u6388\u6743\uff0c\u4f46\u592a\u9ebb\u70e6\u4e86\uff0c\u5f97\u4e0d\u507f\u5931", "categories": [{"name": "SpeechRecognition", "slug": "SpeechRecognition", "permalink": "/Blog/category/SpeechRecognition/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "SpeechRecognition", "slug": "SpeechRecognition", "permalink": "/Blog/tag/SpeechRecognition/"}]}, {"title": "DBUtils \u62a5\u9519 codec can't encode characters in position", "date": "2020-07-17T11:05:00-00.00", "path": "/Blog/archives/redis/", "text": "\u4eca\u5929\u4f7f\u7528DBUtils\u8fde\u63a5\u6c60\u9047\u5230\u4ee5\u4e0b\u95ee\u9898\uff1a\n'latin-1' codec can't encode characters in position 74-75: ordinal not in range(256)\n\n##\u89e3\u51b3\u65b9\u6cd5\uff1a\n\u6807\u51c6\u7684\u8fde\u63a5\u65b9\u5f0f\u76f8\u540c\uff0c\u5728\u521d\u59cb\u5316PooledDB\u65f6\u58f0\u660e charset=\u2019utf8\u2019\n##\u4ee3\u7801\u5982\u4e0b\uff1a\npool = PooledDB(pymysql,\n\nmincached=5,# \u8fde\u63a5\u6c60\u91cc\u7684\u6700\u5c11\u8fde\u63a5\u6570\n\n                maxcached=30,#\u6700\u5927\u7684\u7a7a\u95f2\u8fde\u63a5\u6570\uff0c\u5982\u679c\u7a7a\u95f2\u8fde\u63a5\u6570\u5927\u4e8e\u8fd9\u4e2a\u6570\uff0cpool\u4f1a\u5173\u95ed\u7a7a\u95f2\u8fde\u63a5\n\n                maxshared=1000,#\u5f53\u8fde\u63a5\u6570\u8fbe\u5230\u8fd9\u4e2a\u6570\uff0c\u65b0\u8bf7\u6c42\u7684\u8fde\u63a5\u4f1a\u5206\u4eab\u5df2\u7ecf\u5206\u914d\u51fa\u53bb\u7684\u8fde\u63a5\n\n                maxconnections=2000,#\u6700\u5927\u7684\u8fde\u63a5\u6570\uff0c\n\n                blocking=True,#\u5f53\u8fde\u63a5\u6570\u8fbe\u5230\u6700\u5927\u7684\u8fde\u63a5\u6570\u65f6\uff0c\u5728\u8bf7\u6c42\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u662fTrue\uff0c\u8bf7\u6c42\u8fde\u63a5\u7684\u7a0b\u5e8f\u4f1a\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u5f53\u524d\u8fde\u63a5\u6570\u5c0f\u4e8e\u6700\u5927\u8fde\u63a5\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u662fFalse\uff0c\u4f1a\u62a5\u9519\uff0c\n\n                host='rds93vu04hr3rn0o2d5io.mysql.rds.aliyuncs.com',\n\nuser='yd_loan_admin',\n\npasswd='abcde123!@#',\n\ndb='yd_loan_sys',\n\nport=3306,\n\ncharset='utf8')\n\n##\u7ecf\u8fc7\u6d4b\u8bd5\u95ee\u9898\u5b8c\u7f8e\u89e3\u51b3", "categories": [{"name": "DBUtils", "slug": "DBUtils", "permalink": "/Blog/category/DBUtils/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "DBUtils", "slug": "DBUtils", "permalink": "/Blog/tag/DBUtils/"}]}, {"title": "Flask\u7684\u8de8\u57df\u8bf7\u6c42\u95ee\u9898\uff08CSRF\uff09", "date": "2019-07-27T01:05:00-00.00", "path": "/Blog/archives/CSRF/", "text": "#\u524d\u8a00\uff1a\n\u8de8\u57df\u95ee\u9898  \u201cCross-Origin Resource Sharing (CORS)\u201d \u7684\u672c\u8d28\u662f \u6d4f\u89c8\u5668\u7981\u6b62\u4ece\u4e00\u4e2a\u6e90\u52a0\u8f7d\u7684\u811a\u672c\u4e0e\u53e6\u4e00\u4e2a\u6e90\u8fdb\u884c\u4ea4\u4e92\uff0c\u5373 --- *\u6d4f\u89c8\u5668\u7684\u540c\u6e90\u7b56\u7565\uff08Same-origin policy\uff09\u4ed6\u7684\u5b9a\u4e49*\u662f\uff1a\nThe\u00a0same-origin policy\u00a0is a critical security mechanism that restricts how a document or script loaded from one\u00a0origin\u00a0can interact with a resource from another origin.\u00a0It helps to isolate potentially malicious documents, reducing possible attack vectors.\n\n\u540c\u6e90\u7b56\u7565\u9650\u5236\u4e86\u4ece\u540c\u4e00\u4e2a\u6e90\u52a0\u8f7d\u7684\u6587\u6863\u6216\u811a\u672c\u5982\u4f55\u4e0e\u6765\u81ea\u53e6\u4e00\u4e2a\u6e90\u7684\u8d44\u6e90\u8fdb\u884c\u4ea4\u4e92\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u9694\u79bb\u6f5c\u5728\u6076\u610f\u6587\u4ef6\u7684\u91cd\u8981\u5b89\u5168\u673a\u5236\u3002#\u7ecf\u8fc7\uff1a\n   \u6700\u8fd1\u4f7f\u7528flask\u7f16\u5199\u4e86\u4e00\u4e2a\u524d\u540e\u7aef\u5206\u79bb\u7684web\u9879\u76ee\uff0c\u524d\u7aef\u5bf9\u63a5\u65f6\u4f7f\u7528$.ajax\uff0c\u5e76\u4e14\u51fa\u73b0\u4e86\u5982\u4e0b\u95ee\u9898\uff1a\nimage.png\nimage.png#\u89e3\u51b3\u601d\u8def\uff1a\n\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u51fa\u73b0\u8de8\u57df\u95ee\u9898\u7684\u6838\u5fc3\u539f\u56e0\u662f\u6d4f\u89c8\u5668\u7684\u540c\u6e90\u7b56\u7565\uff0c\u6240\u4ee5\u89e3\u51b3\u95ee\u9898\u7684\u601d\u8def\u6709\u4e24\u4e2a\uff1a\n\u4ece\u6d4f\u89c8\u5668\u7aef\u89e3\u51b3\n\u4ece\u670d\u52a1\u5668\u7aef\u89e3\u51b3\n\n\u8fd9\u6b21\u5148\u8c08\u5982\u4f55\u4ece\u670d\u52a1\u7aef\u89e3\u51b3\uff0c\u4f46\u662f\u60f3\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u5c31\u9700\u8981\u641e\u660e\u767d\u5230\u5e95\u4ec0\u4e48\u662f\u540c\u6e90\uff1a#####\u540c\u6e90\u7684\u5b9a\u4e49\uff1a\u5982\u679c\u4e24\u4e2a\u9875\u9762\u7684\u534f\u8bae\uff0c\u7aef\u53e3\uff08\u5982\u679c\u6709\u6307\u5b9a\uff09\u548c\u57df\u540d\u90fd\u76f8\u540c\uff0c\u5219\u4e24\u4e2a\u9875\u9762\u5177\u6709\u76f8\u540c\u7684\u6e90\u3002\u4e0b\u8868\u7ed9\u51fa\u4e86\u76f8\u5bf9http://store.company.com/dir/page.html\u540c\u6e90\u68c0\u6d4b\u7684\u793a\u4f8b:| URL | \u7ed3\u679c | \u539f\u56e0 |\n| http://store.company.com/dir2/other.html | \u6210\u529f |  |\n| http://store.company.com/dir/inner/another.html | \u6210\u529f |  |\n| https://store.company.com/secure.html | \u5931\u8d25 | \u4e0d\u540c\u534f\u8bae ( https\u548chttp ) |\n| http://store.company.com:81/dir/etc.html | \u5931\u8d25 | \u4e0d\u540c\u7aef\u53e3 ( 81\u548c80) |\n| http://news.company.com/dir/other.html | \u5931\u8d25 | \u4e0d\u540c\u57df\u540d\u00a0( news\u548cstore ) |\u53e6\u8bf7\u53c2\u89c1\u6587\u4ef6\u7684\u6e90\u5b9a\u4e49: URLs.#\u89e3\u51b3\u65b9\u6848\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528CORS\u7684\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u201cCross-Origin Resource Sharing (CORS)\u201d\u4ec0\u4e48\u662fCORS\uff1f\nCross-Origin Resource Sharing (CORS) is a mechanism that uses additional\u00a0HTTP\u00a0headers to tell a browser to let a web application running at one origin (domain) have permission to access selected resources from a server at a different origin.\u00a0A web application makes a\u00a0cross-origin HTTP request\u00a0when it requests a resource that has a different origin (domain, protocol, and port) than its own origin.\n\u8de8\u6e90\u8d44\u6e90\u5171\u4eab\uff08CORS\uff09\u662f\u4e00\u79cd\u673a\u5236\uff0c\u5b83\u4f7f\u7528\u5176\u4ed6HTTP\u6807\u5934\u544a\u8bc9\u6d4f\u89c8\u5668\u8ba9\u5728\u4e00\u4e2a\u6e90\uff08\u57df\uff09\u4e0a\u8fd0\u884c\u7684Web\u5e94\u7528\u7a0b\u5e8f\u6709\u6743\u4ece\u4e0d\u540c\u6765\u6e90\u7684\u670d\u52a1\u5668\u8bbf\u95ee\u6240\u9009\u8d44\u6e90\u3002Web\u5e94\u7528\u7a0b\u5e8f\u5728\u8bf7\u6c42\u5177\u6709\u4e0e\u5176\u81ea\u5df1\u7684\u6e90\u4e0d\u540c\u7684\u6e90\uff08\u57df\uff0c\u534f\u8bae\u548c\u7aef\u53e3\uff09\u7684\u8d44\u6e90\u65f6\uff0c\u4f1a\u53d1\u51fa\u8de8\u6e90HTTP\u8bf7\u6c42\u3002\u4e00\u4e2a\u8de8\u57df\u8bf7\u6c42\u7684\u4f8b\u5b50\uff1aJavaScript\u7684Web\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u6240\u670d\u52a1\u7684\u524d\u7aefhttp://domain-a.com\u5e94\u7528XMLHttpRequest\u505a\u51fa\u4e86\u8981\u6c42http://api.domain-b.com/data.json\u3002\u51fa\u4e8e\u5b89\u5168\u539f\u56e0\uff0c\u6d4f\u89c8\u5668\u4f1a\u9650\u5236\u4ece\u811a\u672c\u4e2d\u53d1\u8d77\u7684\u8de8\u6e90HTTP\u8bf7\u6c42\u3002\u4f8b\u5982\uff0cXMLHttpRequest\u4e0e\u63d0\u53d6API\u9075\u5faa\u540c\u6e90\u7b56\u7565\u3002\u8fd9\u610f\u5473\u7740\u4f7f\u7528\u8fd9\u4e9bAPI\u7684Web\u5e94\u7528\u7a0b\u5e8f\u53ea\u80fd\u4ece\u52a0\u8f7d\u5e94\u7528\u7a0b\u5e8f\u7684\u540c\u4e00\u6e90\u8bf7\u6c42HTTP\u8d44\u6e90\uff0c\u9664\u975e\u6765\u81ea\u5176\u4ed6\u6765\u6e90\u7684\u54cd\u5e94\u5305\u542b\u6b63\u786e\u7684CORS\u6807\u5934\u3002imageCORS\u673a\u5236\u652f\u6301\u6d4f\u89c8\u5668\u548cWeb\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u5b89\u5168\u8de8\u6e90\u8bf7\u6c42\u548c\u6570\u636e\u4f20\u8f93\u3002\u73b0\u4ee3\u6d4f\u89c8\u5668\u5728API\u5bb9\u5668\uff08\u5982FetchXMLHttpRequest\u6216Fetch\uff09\u4e2d\u4f7f\u7528CORS\u00a0\u6765\u5e2e\u52a9\u964d\u4f4e\u8de8\u6e90HTTP\u8bf7\u6c42\u7684\u98ce\u9669\u3002\u5982\u4f55\u5728\u5206flask\u4e2d\u4f7f\u7528\uff1f\u4ee3\u7801\u793a\u4f8b\uff1a\nfrom flask_cors import *\n\napp = Flask(__name__)\nCORS(app, supports_credentials=True)\n\n\u4ea6\u6216\u8005\u4f60\u53ef\u4ee5\u4f7f\u7528\u88c5\u9970\u5668\u7684\u65b9\u5f0f\u4e3a\u6307\u5b9a\u7684\u89c6\u56fe\u51fd\u6570\u8fdb\u884c\u914d\u7f6e\n@app.route(&quot;/&quot;)\n@cross_origin()\ndef helloWorld():\n  return &quot;Hello, cross-origin-world!&quot;\n\nflask\u4e2d\u6709\u968f\u65f6\u53ef\u7528\u7684flask_cors \u5e93\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u4ed6\u4ee5\u4e0b\u662fFlask-CORS \u7684\u5b98\u65b9\u6587\u6863\u94fe\u63a5http://flask-cors.readthedocs.io/en/latest/#\u539f\u7406\uff1f\nFunctional overviewSection\nThe Cross-Origin Resource Sharing standard works by adding new\u00a0HTTP headers\u00a0that allow servers to describe the set of origins that are permitted to read that information using a web browser. Additionally, for HTTP request methods that can cause side-effects on server's data (in particular, for HTTP methods other than\u00a0GET, or for\u00a0POST\u00a0usage with certain\u00a0MIME types), the specification mandates that browsers &quot;preflight&quot; the request, soliciting supported methods from the server with an HTTP\u00a0OPTIONS\u00a0request method, and then, upon &quot;approval&quot; from the server, sending the actual request with the actual HTTP request method. Servers can also notify clients whether &quot;credentials&quot; (including\u00a0Cookies\u00a0and HTTP Authentication data) should be sent with requests.\nCORS failures result in errors, but for security reasons, specifics about what went wrong\u00a0are not available to JavaScript code. All the code knows is that an error occurred. The only way to determine what specifically went wrong is to look at the browser's console for details.\nSubsequent sections discuss scenarios, as well as provide a breakdown of the HTTP headers used.\n\u8de8\u6e90\u8d44\u6e90\u5171\u4eab\u6807\u51c6\u7684\u5de5\u4f5c\u539f\u7406\u662f\u6dfb\u52a0\u65b0\u7684HTTP\u6807\u5934\uff0c\u5141\u8bb8\u670d\u52a1\u5668\u63cf\u8ff0\u5141\u8bb8\u4f7f\u7528Web\u6d4f\u89c8\u5668\u8bfb\u53d6\u8be5\u4fe1\u606f\u7684\u8d77\u6e90\u96c6\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e\u53ef\u80fd\u5bf9\u670d\u52a1\u5668\u6570\u636e\u4ea7\u751f\u526f\u4f5c\u7528\u7684HTTP\u8bf7\u6c42\u65b9\u6cd5\uff08\u7279\u522b\u662f\u5bf9\u4e8e\u9664\u67d0\u4e9bMIME\u7c7b\u578b\u4ee5\u5916\u7684HTTP\u65b9\u6cd5GET\u6216\u7528\u4e8ePOST\u67d0\u4e9bMIME\u7c7b\u578b\uff09\uff0c\u89c4\u8303\u8981\u6c42\u6d4f\u89c8\u5668\u201c\u9884\u68c0\u201d\u8bf7\u6c42\uff0c\u4ece\u800c\u8bf7\u6c42\u652f\u6301\u7684\u65b9\u6cd5\u3002\u670d\u52a1\u5668\u4f7f\u7528HTTP\u00a0OPTIONS\u8bf7\u6c42\u65b9\u6cd5\uff0c\u7136\u540e\uff0c\u5728\u670d\u52a1\u5668\u201c\u6279\u51c6\u201d\u540e\uff0c\u4f7f\u7528\u5b9e\u9645\u7684HTTP\u8bf7\u6c42\u65b9\u6cd5\u53d1\u9001\u5b9e\u9645\u8bf7\u6c42\u3002\u670d\u52a1\u5668\u8fd8\u53ef\u4ee5\u901a\u77e5\u5ba2\u6237\u7aef\u662f\u5426\u201c\u51ed\u636e\u201d\uff08\u5305\u62ecCookie\uff09\u00a0\u548cHTTP\u8ba4\u8bc1\u6570\u636e\uff09\u5e94\u8be5\u4e0e\u8bf7\u6c42\u4e00\u8d77\u53d1\u9001\u3002\nCORS\u5931\u8d25\u4f1a\u5bfc\u81f4\u9519\u8bef\uff0c\u4f46\u51fa\u4e8e\u5b89\u5168\u539f\u56e0\uff0cJavaScript\u4ee3\u7801\u65e0\u6cd5\u4f7f\u7528\u6709\u5173\u9519\u8bef\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u6240\u6709\u4ee3\u7801\u90fd\u77e5\u9053\u53d1\u751f\u4e86\u9519\u8bef\u3002\u786e\u5b9a\u5177\u4f53\u95ee\u9898\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u67e5\u770b\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\u4ee5\u83b7\u53d6\u8be6\u7ec6\u4fe1\u606f\u3002\n\u4ed3\u4fc3\u6574\u7406\uff0c\u4e0d\u559c\u52ff\u55b7", "categories": [{"name": "Python", "slug": "Python", "permalink": "/Blog/category/Python/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "Python", "slug": "Python", "permalink": "/Blog/tag/Python/"}]}, {"title": "redis.Redis\u4e0eredis.StrictRedis\u533a\u522b", "date": "2019-07-17T20:34:00-00.00", "path": "/Blog/archives/redis/", "text": "redis-py\u63d0\u4f9b\u4e24\u4e2a\u7c7bRedis\u548cStrictRedis\u7528\u4e8e\u5b9e\u73b0Redis\u7684\u547d\u4ee4\uff0cStrictRedis\u7528\u4e8e\u5b9e\u73b0\u5927\u90e8\u5206\u5b98\u65b9\u7684\u547d\u4ee4\uff0c\u5e76\u4f7f\u7528\u5b98\u65b9\u7684\u8bed\u6cd5\u548c\u547d\u4ee4\uff08\u6bd4\u5982\uff0cSET\u547d\u4ee4\u5bf9\u5e94\u4e0eStrictRedis.set\u65b9\u6cd5\uff09\u3002Redis\u662fStrictRedis\u7684\u5b50\u7c7b\uff0c\u7528\u4e8e\u5411\u540e\u517c\u5bb9\u65e7\u7248\u672c\u7684redis-py\u3002 \u7b80\u5355\u8bf4\uff0c\u5b98\u65b9\u63a8\u8350\u4f7f\u7528StrictRedis\u65b9\u6cd5\u3002\u4e0d\u63a8\u8350Redis\u7c7b\uff0c\u539f\u56e0\u662f\u4ed6\u548c\u54b1\u4eec\u5728redis-cli\u64cd\u4f5c\u6709\u4e9b\u4e0d\u4e00\u6837\uff0c\u4e3b\u8981\u4e0d\u4e00\u6837\u662f\u4e0b\u9762\u8fd9\u4e09\u4e2a\u65b9\u9762\u3002\u00b7LREM\uff1a\u53c2\u6570 \u2018num\u2019 \u548c \u2018value\u2019 \u7684\u987a\u5e8f\u4ea4\u6362\u4e86\u4e00\u4e0b\uff0ccli\u662f lrem queueName 0 \u2018string\u2019 \u3002 \u8fd9\u91cc\u76840\u65f6\u6240\u6709\u7684\u610f\u601d\u3002 \u4f46\u662fRedis\u8fd9\u4e2a\u7c7b\uff0c\u628a\u63a7\u5236\u548cstring\u8c03\u6362\u4e86\u3002\u00b7ZADD\uff1a\u5b9e\u73b0\u65f6 score \u548c value \u7684\u987a\u5e8f\u4e0d\u5c0f\u5fc3\u5f04\u53cd\u4e86\uff0c\u540e\u6765\u6709\u4eba\u7528\u4e86\uff0c\u5c31\u8fd9\u6837\u4e86\u00b7SETEX: time \u548c value \u7684\u987a\u5e8f\u53cd\u4e86.Pool: \u8fde\u63a5\u6c60Redis\u7684\u8fde\u63a5\u6c60\u7684\u65b9\u6cd5\uff1a\npool = redis.ConnectionPool(host=\u2018localhost\u2018, port=6379, db=0)\n\nr = redis.Redis(connection_pool=pool)\n\nStrictRedis\u7684\u8fde\u63a5\u6c60\u7684\u5b9e\u73b0\u65b9\u5f0f:\nIn [4]: pool = redis.ConnectionPool(host=\u2018127.0.0.1\u2018, port=6379)\n\nIn [5]: r = redis.StrictRedis(connection_pool=pool)\n\n\u5b98\u65b9\u7684\u521b\u5efaredis\u7684\u65f6\u5019\uff0c\u90fd\u53ef\u4ee5\u6dfb\u52a0\u4ec0\u4e48\u53c2\u6570\u3002\nclass redis.StrictRedis(host=\u2018localhost\u2018, port=6379, db=0, password=None, socket_timeout=None, connection_pool=None, charset=\u2018utf-8\u2018, errors=\u2018strict\u2018, decode_responses=False, unix_socket_path=None)\nImplementation of the Redis protocol.\nThis abstract class provides a Python interface to all Redis commands and an implementation of the Redis protocol.\nConnection and Pipeline derive from this, implementing how the commands are sent and received to the Redis serverredis\u7684\u5bf9\u4e8e\u6709\u4e9b\u7f16\u7801\u5165\u5e93\u7684\u95ee\u9898\uff0credis\u7684\u8fde\u63a5\u9644\u52a0\u7684\u53c2\u6570\u91cc\u9762\uff0c\u9ed8\u8ba4\u7f16\u7801\u662futf-8\uff0c\u4f46\u662f\u5982\u679c\u4f60\u975e\u8981\u7528GBK\u90a3\u5c31\u9700\u8981\u6307\u660e\u4f60\u7684chardet\u548cdecode_responses\u4e3aTrue \u3002\u539f\u6587\u5730\u5740(\u8fd8\u662f\u6211\u7684\u535a\u5ba2): https://www.yifeilu.cn/index.php/archives/32/", "categories": [{"name": "Python", "slug": "Python", "permalink": "/Blog/category/Python/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "Redis", "slug": "Redis", "permalink": "/Blog/tag/Redis/"}]}, {"title": "MySQL & SQLit\u5ffd\u7565\u5916\u952e\u7ea6\u675f\u5220\u9664\u6570\u636e", "date": "2019-02-22T09:05:00-00.00", "path": "/Blog/archives/FOREIGN_KEY_CHECKS/", "text": "\u4eca\u5929\u5728\u5220\u9664\u8868\u6570\u636e\u65f6\u9047\u5230\u4e00\u4e2a\u95ee\u9898\uff1a\nERROR 1701 (42000): Cannot truncate a table referenced\nin a foreign key constraint\n(`diandian_loan`.`auth_group_permissions`, CONSTRAINT \n`auth_group_permissi_permission_id_84c5c92e_fk_auth_p\nermission_id` FOREIGN KEY (`permission_id`) REFERENCES \n`diandian_loan`.`auth_permissio)\n\n\u610f\u601d\u662f\u7531\u4e8e\u6709\u4e3b\u5916\u952e\u7ea6\u675f\uff0c\u6240\u4ee5\u4e0d\u80fd\u5220\u9664\u8868\u6570\u636e\u3002\u5373\u4f7f\u5f53\u65f6\u5df2\u7ecf\u5c06\u7236\u8868\u6570\u636e\u6e05\u7a7a\u8fd8\u662f\u4e0d\u884c\u3002\u89e3\u51b3\u529e\u6cd5\uff1a\n\u5148\u53d6\u6d88\u4e3b\u5916\u952e\u5173\u7cfb\u9a8c\u8bc1\uff1aSET FOREIGN_KEY_CHECKS = 0;\n\n\u7136\u540e\u5220\u9664\u9700\u8981\u5220\u9664\u7684\u6570\u636e\u6700\u540e\u6062\u590d\uff1aSET FOREIGN_KEY_CHECKS = 1;\n\nSQLit\u7565\u6709\u4e0d\u540cPRAGMA foreign_keys = 0;\n\nPRAGMA foreign_keys = 1;\n\n\u5b8c\u7f8e\u89e3\u51b3", "categories": [{"name": "Mysql", "slug": "Mysql", "permalink": "/Blog/category/Mysql/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "Mysql", "slug": "Mysql", "permalink": "/Blog/tag/Mysql/"}]}, {"title": "\u5229\u7528sqlacodegen\u81ea\u52a8\u751f\u6210ORM\u5b9e\u4f53\u7c7b", "date": "2019-01-22T11:05:00-00.00", "path": "/Blog/archives/mysql_group_by_1055/", "text": "\u4eca\u5929\u5728\u4f7f\u7528group_by\u65f6\u9047\u5230\u9519\u8bef\uff0c\u5927\u6982\u662f\u4ee5\u4e0b\u6837\u5b50\uff1a\n(cymysql.err.InternalError) (1055, &quot;Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column \n\n\n[SQL]CREATETABLE`m_part`(`f_id`INTNOTNULL,`f_name`VARCHAR(20)NULL,PRIMARYKEY(`f_id`))ENGINE=myisamDEFAULTCHARSET=utf8PARTITIONBYRANGE(f_id)(PARTITIONp0VALUESlessTHAN(10),PARTITIONp1VALUESlessTHAN(20))\n\n\u539f\u56e0\uff1a\nmysql5.7.5\u7248\u672c\u5f00\u59cb\uff0csql_mode\u4f7f\u7528\u7684\u662f\u9ed8\u8ba4\u503c( \u5982\u4e0a)\uff0c\u800c\u4e4b\u524d\u4f7f\u7528\u7684mysql\u914d\u7f6e\u6587\u4ef6\u4e2dsql_mode=\u201d\u201c,\u7531\u4e8e\u8fd9\u4e2a\u7279\u6027\u4f7f\u5728\u4f7f\u7528group_by\u65f6\u51fa\u73b0\u62a5\u9519linux\u4e0b\u89e3\u51b3\u65b9\u6848\uff1a\u4fee\u6539mysql.conf\nsudo vim /etc/mysql/mysql.conf.d/mysql.conf\n\n\u7136\u540e\u5c06\nsql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES\n\u6dfb\u52a0\u81f3\u6587\u4ef6\u672b\u5c3e\u91cd\u542f\u670d\u52a1\uff1a\n/etc/init.d/mysql restart\u95ee\u9898\u89e3\u51b3", "categories": [{"name": "Mysql", "slug": "Mysql", "permalink": "/Blog/category/Mysql/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "Mysql", "slug": "Mysql", "permalink": "/Blog/tag/Mysql/"}]}, {"title": "\u5229\u7528sqlacodegen\u81ea\u52a8\u751f\u6210ORM\u5b9e\u4f53\u7c7b", "date": "2018-08-12T15:05:00-00.00", "path": "/Blog/archives/sqlacodegen/", "text": "\u4ee5\u4e0b\u65b9\u6cd5\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u901a\u8fc7\u6570\u636e\u5e93\u8868\u6765\u751f\u6210ORM\u5b9e\u4f53\uff0c\u8282\u7701\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\u653b\u57ce\u72ee\u4eec\u7684\u5de5\u4f5c\u91cf\u547d\u4ee4\uff1asqlacodegen --noviews --noconstraints --noindexes --outfile d:\\\\models.py mysql://username:passwd@\u670d\u52a1\u5668\u5730\u5740:3306/dbname\n\n\n\n\n  key\n  meaning\n\n\n\n\n  noviews\n  \u4e0d\u751f\u6210\u89c6\u56fe\n\n\n  noconstraints\n  \u4e0d\u751f\u6210\u5916\u952e\u5173\u8054\n\n\n  noindexes\n  \u4e0d\u751f\u6210\u7d22\u5f15\n\n\n  outfile\n  \u6587\u4ef6\u8f93\u51fa\u8def\u5f84\n\n\n\n", "categories": [{"name": "Python", "slug": "Python", "permalink": "/Blog/category/Python/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "Python", "slug": "Python", "permalink": "/Blog/tag/Python/"}]}, {"title": "linux\u6587\u4ef6\u5408\u5e76", "date": "2017-08-17T11:05:00-00.00", "path": "/Blog/archives/linux/", "text": "#\u628a\u4e24\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\u548c\u5e76\u5728\u4e00\u8d77\ncat b1.sql b2.sql b3.sql &gt;&gt; b_all.sql\n\n\u6216\u8005\n\ncat *.sql  &gt;&gt;  merge.sql\n\n\n\n", "categories": [{"name": "linux", "slug": "linux", "permalink": "/Blog/category/linux/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "linux", "slug": "linux", "permalink": "/Blog/tag/linux/"}]}, {"title": "Python\u65f6\u95f4\u5904\u7406\u5c0f\u7ed3", "date": "2017-07-17T11:05:00-00.00", "path": "/Blog/archives/datetime/", "text": "\n\nnowTime=datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')#\u73b0\u5728\n\npastTime = (datetime.datetime.now()-datetime.timedelta(hours=1)).strftime('%Y-%m-%d %H:%M:%S')#\u8fc7\u53bb\u4e00\u5c0f\u65f6\u65f6\u95f4\n\nafterTomorrowTime = (datetime.datetime.now()+datetime.timedelta(days=2)).strftime('%Y-%m-%d %H:%M:%S')#\u540e\u5929\n\ntomorrowTime = (datetime.datetime.now()+datetime.timedelta(days=1)).strftime('%Y-%m-%d %H:%M:%S')#\u660e\u5929\n\nprint('\\n',nowTime,'\\n',pastTime,'\\n',afterTomorrowTime,'\\n',tomorrowTime)\n\npython\u7b80\u5355\u83b7\u53d6\u4e24\u4e2a\u65e5\u671f\u4e4b\u95f4\u7684\u5e74\u5ea6\u3001\u6708\u5ea6\u3001\u5929\u6570\u5dee\u7684\u65b9\u6cd5\nimport datetime\n\ndef days(str1,str2):\n\ndate1=datetime.datetime.strptime(str1[0:10],&quot;%Y-%m-%d&quot;)\n\ndate2=datetime.datetime.strptime(str2[0:10],&quot;%Y-%m-%d&quot;)\n\nnum=(date1-date2).days\n\nreturn num\n\ndef months(str1,str2):\n\nyear1=datetime.datetime.strptime(str1[0:10],&quot;%Y-%m-%d&quot;).year\n\nyear2=datetime.datetime.strptime(str2[0:10],&quot;%Y-%m-%d&quot;).year\n\nmonth1=datetime.datetime.strptime(str1[0:10],&quot;%Y-%m-%d&quot;).month\n\nmonth2=datetime.datetime.strptime(str2[0:10],&quot;%Y-%m-%d&quot;).month\n\nnum=(year1-year2)*12+(month1-month2)\n\nreturn num\n\n\u8f93\u5165days('2018-04-23 08:18:09','2017-03-21 10:19:33') \uff0c\u8fd4\u56de398\n\n\u8f93\u5165months('2018-01-23 08:18:09','2017-03-21 10:19:33')\uff0c\u8fd4\u56de10\nimport datetime\n\nnowTime=datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')#\u73b0\u5728\n\npastTime = (datetime.datetime.now()-datetime.timedelta(hours=1)).strftime('%Y-%m-%d %H:%M:%S')#\u8fc7\u53bb\u4e00\u5c0f\u65f6\u65f6\u95f4\n\nafterTomorrowTime = (datetime.datetime.now()+datetime.timedelta(days=2)).strftime('%Y-%m-%d %H:%M:%S')#\u540e\u5929\n\ntomorrowTime = (datetime.datetime.now()+datetime.timedelta(days=1)).strftime('%Y-%m-%d %H:%M:%S')#\u660e\u5929\n\nprint('\\n',nowTime,'\\n',pastTime,'\\n',afterTomorrowTime,'\\n',tomorrowTime)\n\n", "categories": [{"name": "Python", "slug": "Python", "permalink": "/Blog/category/Python/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "Python", "slug": "Python", "permalink": "/Blog/tag/Python/"}]}], "pages": [{"title": "\u5934\u75db\u8bb0", "date": "2019-07-17T20:34:00-00.00", "path": "/Blog/migraine/", "text": "\u516c\u4f17\u53f7\n\u5c0f\u7a0b\u5e8f\n111", "categories": [], "tags": []}, {"title": "\u5173\u4e8e", "date": "2017-06-28T17:26:00-00.00", "path": "/Blog/about/", "text": "\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002Contact\nEmail: isRichard.Lu@gmail.com", "categories": [], "tags": []}]}